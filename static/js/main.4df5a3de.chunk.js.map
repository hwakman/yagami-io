{"version":3,"sources":["static/yagami.jpg","App.js","serviceWorker.js","index.js","static/chara.jpg","static/baner.jpg"],"names":["module","exports","__webpack_require__","p","DatkZone","backgroundColor","minHeight","color","padding","WhiteZone","textAlign","FooterStyle","height","backgroundImage","Background","backgroundSize","backgroundPosition","Content","react_default","a","createElement","style","Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handalModal","e","console","log","setState","modals","state","bind","assertThisInitialized","class","position","top","width","className","href","type","onClick","cursor","reactstrap_es","isOpen","toggle","float","App_Content","Component","FirstContent","src","Avatar","alt","zIndex","fontWeight","SecondContent","react","ThirdContent","Pin","FooterContent","App","App_Navbar","App_FirstContent","App_SecondContent","App_ThirdContent","App_FooterContent","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6RCQlCC,EAAW,CAACC,gBAAgB,QAAQC,UAAU,QAAQC,MAAM,aAAaC,QAAQ,YACjFC,EAAY,CAACJ,gBAAgB,QAAQC,UAAU,QAAQE,QAAQ,WAAWD,MAAM,WAAWG,UAAU,UACrGC,EAAc,CAACC,OAAO,OAAOC,gBAAgB,OAAOC,IAAW,IAAIC,eAAe,QAAQC,mBAAmB,iBAE7GC,EAAU,kBAAMC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACT,OAAO,OAAOC,gBAAgB,OAAOC,IAAW,IAAIC,eAAe,QAAQC,mBAAmB,iBAE3HM,cACF,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAOVQ,YAAc,SAAAC,GACVC,QAAQC,IAAIF,GACZR,EAAKW,SAAS,CAACC,QAAQZ,EAAKa,MAAMD,UARlCZ,EAAKa,MAAQ,CACTD,QAAQ,GAEZZ,EAAKO,YAAcP,EAAKO,YAAYO,KAAjBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KALLA,wEAad,OACIN,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKoB,MAAM,0BAA0BnB,MAAO,CAACoB,SAAS,WAAWC,IAAI,EAAEC,MAAM,SACzEzB,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,mBACX1B,EAAAC,EAAAC,cAAA,KAAGC,MAAO,CAACd,MAAM,SAAUiC,MAAM,wBAAwBK,KAAK,IAA9D,QACA3B,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,wBACX1B,EAAAC,EAAAC,cAAA,SAAOwB,UAAU,eAAeE,KAAK,WACrC5B,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,uBACX1B,EAAAC,EAAAC,cAAA,QAAM2B,QAASpB,KAAKI,YAAaV,MAAO,CAAC2B,OAAO,WAAYR,MAAM,oBAAlE,cAKhBtB,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAUC,OAAQvB,KAAKU,MAAMD,OAAQe,OAAQxB,KAAKI,aAC9Cb,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACI/B,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,wDAA+CF,EAAAC,EAAAC,cAAA,WAA/C,iCACHF,EAAAC,EAAAC,cAAA,UAAQC,MAAO,CAAC+B,MAAM,SAAUL,QAASpB,KAAKI,YAAaa,UAAU,kBAArE,WAGR1B,EAAAC,EAAAC,cAACiC,EAAD,cAjCKC,aAuCfC,EAAe,WACjB,OACIrC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACb,QAAQ,aACjBU,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMwB,UAAU,iCACZ1B,EAAAC,EAAAC,cAAA,OAAKoC,IAAKC,IAAQ7C,OAAO,QAAQgC,UAAU,iBAAiBc,IAAI,MAAMrC,MAAO,CAACoB,SAAS,WAAWkB,OAAO,EAAEjB,IAAI,YAIvHxB,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACT,OAAO,WAEpBM,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,qBAAqBvB,MAAO,CAACX,UAAU,WAClDQ,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,iCACP1B,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOC,MAAO,CAACuC,WAAW,SAA1B,kBAGZ1C,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,iCACX1B,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOwB,UAAU,cAAjB,iBAGR1B,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,gCAAgCvB,MAAO,CAACd,MAAM,aACzDW,EAAAC,EAAAC,cAAA,8bAYdyC,EAAgB,WAClB,OACI3C,EAAAC,EAAAC,cAAC0C,EAAA,SAAD,KACI5C,EAAAC,EAAAC,cAAA,OAAKC,MAAOjB,GACRc,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,aACX1B,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,OACX1B,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,UACf1B,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,+hBAQIF,EAAAC,EAAAC,cAAA,YAEJF,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,UACf1B,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,maAQJF,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,OACX1B,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,UACf1B,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,+hBAQIF,EAAAC,EAAAC,cAAA,YAEJF,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,UACf1B,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,uaAclB2C,EAAe,WACjB,OACI7C,EAAAC,EAAAC,cAAA,OAAKC,MAAOZ,EAAWmC,UAAU,aAC7B1B,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAACX,UAAU,SAASQ,EAAAC,EAAAC,cAAA,sBACjCF,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,OACX1B,EAAAC,EAAAC,cAAA,QAAMwB,UAAU,UACZ1B,EAAAC,EAAAC,cAAA,OAAKoC,IAAKQ,IAAKpD,OAAO,QAAQgC,UAAU,gBAAgBc,IAAI,QAC5DxC,EAAAC,EAAAC,cAAA,kTAOJF,EAAAC,EAAAC,cAAA,QAAMwB,UAAU,UACZ1B,EAAAC,EAAAC,cAAA,OAAKoC,IAAKQ,IAAKpD,OAAO,QAAQgC,UAAU,gBAAgBc,IAAI,QAC5DxC,EAAAC,EAAAC,cAAA,kTAOJF,EAAAC,EAAAC,cAAA,QAAMwB,UAAU,UACZ1B,EAAAC,EAAAC,cAAA,OAAKoC,IAAKQ,IAAKpD,OAAO,QAAQgC,UAAU,gBAAgBc,IAAI,QAC5DxC,EAAAC,EAAAC,cAAA,kTAOJF,EAAAC,EAAAC,cAAA,QAAMwB,UAAU,UACZ1B,EAAAC,EAAAC,cAAA,OAAKoC,IAAKQ,IAAKpD,OAAO,QAAQgC,UAAU,gBAAgBc,IAAI,QAC5DxC,EAAAC,EAAAC,cAAA,qTAYd6C,EAAgB,WAClB,OACI/C,EAAAC,EAAAC,cAAC0C,EAAA,SAAD,KACI5C,EAAAC,EAAAC,cAAA,OAAKC,MAAOV,MAKHuD,cACjB,SAAAA,EAAY3C,GAAO,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAuC,GAAAzC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyC,GAAApC,KAAAH,KACTJ,0EAGN,OACIL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC+C,EAAD,MACAjD,EAAAC,EAAAC,cAACgD,EAAD,MAAgBlD,EAAAC,EAAAC,cAAA,WAChBF,EAAAC,EAAAC,cAACiD,EAAD,MACAnD,EAAAC,EAAAC,cAACkD,EAAD,MACApD,EAAAC,EAAAC,cAACmD,EAAD,cAXiBjB,aCzLbkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5D,EAAAC,EAAAC,cAAC2D,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCEnInBvF,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.4df5a3de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/yagami.d32ed0cd.jpg\";","import React,{Component,Fragment} from 'react';\nimport * as bs from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Background from './static/baner.jpg';\nimport Avatar from './static/yagami.jpg';\nimport Pin from './static/chara.jpg';\n// import './static/css/static.css';\n\nconst DatkZone = {backgroundColor:\"black\",minHeight:\"150px\",color:\"whitesmoke\",padding:\"25px 0px\"}\nconst WhiteZone = {backgroundColor:\"white\",minHeight:\"150px\",padding:\"25px 0px\",color:\"darkgray\",textAlign:\"center\"};\nconst FooterStyle = {height:\"10em\",backgroundImage:\"url(\"+Background+\")\",backgroundSize:\"cover\",backgroundPosition:\"center bottom\"}\n\nconst Content = () => <div style={{height:\"20em\",backgroundImage:\"url(\"+Background+\")\",backgroundSize:\"cover\",backgroundPosition:\"center top\"}} />\n\nclass Navbar extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            modals: false\n        }\n        this.handalModal = this.handalModal.bind(this);\n    }\n\n    handalModal = e => {\n        console.log(e);\n        this.setState({modals:!this.state.modals});\n    }\n    render(){\n        return(\n            <div>\n                <nav class=\"navbar navbar-expand-lg\" style={{position:\"absolute\",top:0,width:\"100%\"}}>\n                    <div className=\"container-fluid\">\n                        <a style={{color:\"white\"}} class=\"navbar-brand col-sm-9\" href=\"\">Home</a>\n                        <div className=\"input-group col-sm-3\">\n                            <input className=\"form-control\" type=\"search\" />\n                            <div className=\"input-group-prepend\">\n                                <span onClick={this.handalModal} style={{cursor:\"pointer\"}} class=\"input-group-text\">search</span>\n                            </div>\n                        </div>\n                    </div>\n                </nav>\n                <bs.Modal isOpen={this.state.modals} toggle={this.handalModal}>\n                    <bs.ModalBody>\n                        <p><h4>This feature can be useable in the fueture.<br/>But the future's naver come!</h4></p>\n                        <button style={{float:\"right\"}} onClick={this.handalModal} className=\"btn btn-danger\">Close</button>\n                    </bs.ModalBody>\n                </bs.Modal>\n                <Content />                \n            </div>\n        )\n    }\n}\n\nconst FirstContent = () => {\n    return(\n        <div style={{padding:\"0px 15px\"}}>\n            <div>\n                <span className=\"justify-content-sm-center row\">\n                    <img src={Avatar} height=\"250px\" className=\"rounded-circle\" alt=\"img\" style={{position:\"absolute\",zIndex:1,top:\"10em\"}} />\n                </span>\n            </div>\n\n            <div style={{height:\"100px\"}} />\n\n            <div className=\"container col-md-6\" style={{textAlign:\"center\"}}>\n                <div className=\"justify-content-md-center row\">\n                        <h2><small style={{fontWeight:\"bold\"}}>Yagami Light</small></h2>\n                </div>\n\n                <div className=\"justify-content-sm-center row\">\n                    <h4><small className=\"text-muted\">Note Writer</small></h4>\n                </div>\n\n                <div className=\"justify-content-sm-center row\" style={{color:\"darkgray\"}}>\n                    <p>\n                    Light Yagami (Japanese: 夜神月ライト Hepburn: Yagami Raito) is a fictional character and the protagonist of the manga series Death Note\n                    , created by Tsugumi Ohba and Takeshi Obata. He is a bored teen genius who finds a supernatural notebook known as the Death Note\n                    , which was dropped by the Shinigami Ryuk. Using the notebook\n                    , which allows its owner to kill anyone simply by knowing their name and face.\n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst SecondContent = () => {\n    return(\n        <Fragment>\n            <div style={DatkZone}>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-sm\">\n                        <h2>Character</h2>\n                        <p>\n                        Light grew up in Japan with his family, \n                        which consists of his father, Soichiro Yagami, \n                        who is a member of the Japanese Task Force (an investigation team opposing Kira), \n                        his mother, Sachiko Yagami, and his younger sister, Sayu Yagami.\n                        At the start of the series, \n                        Light is a third-year high school student (12th Grade) at Daikoku Private Academy and also attends supplemental classes at Gamou Prep Academy in the beginning of the story. \n                        He later attends college at To-Oh University (東応大学, Tōō Daigaku).\n                        </p><br /></div>\n\n                        <div className=\"col-sm\">\n                        <h2>Plot</h2>\n                        <p>\n                        In the year 2003 (2006 in the anime), Light Yagami discovers a mysterious notebook on the ground at his school. \n                        Written on the cover are the words \"Death Note\". The Death Note's instructions state that if a human's name is written within it, \n                        that person shall die. Light is initially skeptical of the notebook's authenticity, but after experimenting with it, \n                        Light realizes that the Death Note is real.\n                        </p>                             \n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm\">\n                        <h2>Appearance</h2>\n                        <p>\n                        Light grew up in Japan with his family, \n                        which consists of his father, Soichiro Yagami, \n                        who is a member of the Japanese Task Force (an investigation team opposing Kira), \n                        his mother, Sachiko Yagami, and his younger sister, Sayu Yagami.\n                        At the start of the series, \n                        Light is a third-year high school student (12th Grade) at Daikoku Private Academy and also attends supplemental classes at Gamou Prep Academy in the beginning of the story. \n                        He later attends college at To-Oh University (東応大学, Tōō Daigaku).\n                        </p><br /></div>\n\n                        <div className=\"col-sm\">\n                        <h2>History</h2>\n                        <p>\n                        In the year 2003 (2006 in the anime), Light Yagami discovers a mysterious notebook on the ground at his school. \n                        Written on the cover are the words \"Death Note\". The Death Note's instructions state that if a human's name is written within it, \n                        that person shall die. Light is initially skeptical of the notebook's authenticity, but after experimenting with it, \n                        Light realizes that the Death Note is real.\n                        </p>                             \n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nconst ThirdContent = () => {\n    return(\n        <div style={WhiteZone} className=\"container\">\n            <span style={{textAlign:\"left\"}}><h1>Content</h1></span>\n            <div className=\"row\">\n                <span className=\"col-sm\">\n                    <img src={Pin} height=\"150px\" className=\"img-thumbnail\" alt=\"img\"/>\n                    <p>\n                        Reboot builds upon Normalize, providing many HTML elements with somewhat opinionated styles using only element selectors. \n                        Additional styling is done only with classes. For example, \n                        we reboot some {`<table>`} styles for a simpler baseline and later provide .table, \n                        .table-bordered, and more.\n                    </p>\n                </span>\n                <span className=\"col-sm\">\n                    <img src={Pin} height=\"150px\" className=\"img-thumbnail\" alt=\"img\"/>\n                    <p>\n                        Reboot builds upon Normalize, providing many HTML elements with somewhat opinionated styles using only element selectors. \n                        Additional styling is done only with classes. For example, \n                        we reboot some {`<table>`} styles for a simpler baseline and later provide .table, \n                        .table-bordered, and more.\n                    </p>\n                </span>\n                <span className=\"col-sm\">\n                    <img src={Pin} height=\"150px\" className=\"img-thumbnail\" alt=\"img\"/>\n                    <p>\n                        Reboot builds upon Normalize, providing many HTML elements with somewhat opinionated styles using only element selectors. \n                        Additional styling is done only with classes. For example, \n                        we reboot some {`<table>`} styles for a simpler baseline and later provide .table, \n                        .table-bordered, and more.\n                    </p>\n                </span>\n                <span className=\"col-sm\">\n                    <img src={Pin} height=\"150px\" className=\"img-thumbnail\" alt=\"img\"/>\n                    <p>\n                        Reboot builds upon Normalize, providing many HTML elements with somewhat opinionated styles using only element selectors. \n                        Additional styling is done only with classes. For example, \n                        we reboot some {`<table>`} styles for a simpler baseline and later provide .table, \n                        .table-bordered, and more.\n                    </p>\n                </span>\n            </div>\n        </div>\n    )\n}\n\nconst FooterContent = () => {\n    return(\n        <Fragment>\n            <div style={FooterStyle} />\n        </Fragment>\n    )\n}\n\nexport default class App extends Component{\n    constructor(props){\n        super(props)\n    }\n    render (){\n        return (\n            <div>\n                <Navbar />\n                <FirstContent /><br />\n                <SecondContent />\n                <ThirdContent />\n                <FooterContent />\n            </div>\n        )\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/chara.92abbc54.jpg\";","module.exports = __webpack_public_path__ + \"static/media/baner.bf8712cb.jpg\";"],"sourceRoot":""}